@model BookDisplayModel
@{
}


<div class="container mt-4">
    <div class="row">
        <div class="col-12 mb-4">
            <form asp-action="Index" class="row row-cols-lg-auto g-3 align-items-center">

                <div class="form-group">
                    <select id="genreDropdown" name="genreId" class="form-control" onchange="this.form.submit()">
                        <option selected>All Genres</option>
                        @foreach (var genre in Model.Genres)
                        {
                            <option selected="@(genre.Id == Model.GenreId)" value="@genre.Id">@genre.GenreName</option>
                        }
                    </select>
                </div>
                <div class="col-12">
                    <div class="input-group">
                        <label class="visually-hidden" for="sterm">Search by title</label>
                        <input type="text" value="@Model.STerm" id="sterm" name="sterm" placeholder="Search by title" class="form-control">
                        <div class="input-group-append mx-2">
                            <button type="submit" class="btn btn-primary">Search</button>
                            <a href="/Home/Index" class="btn btn-dark">Reset</a>
                        </div>
                    </div>
                </div>

            </form>
        </div>
    </div>


    <div class="row">
        @foreach (var book in Model.Books)
        {
            <div class="col-md-4 mb-4 d-flex align-items-stretch">
                <div class="card mx-3" style="max-width: 14rem;">
                    @if (string.IsNullOrEmpty(book.Image))
                    {
                        <img style="width: 100%; height: 280px;" src="/images/NoImage.png" class="card-img-top" alt="...">
                    }
                    else
                    {
                        <img style="width: 100%; height: 280px;" src="/images/@book.Image" class="card-img-top" alt="...">
                    }
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@book.BookName</h5>
                        <p class="card-text">
                            <b>Genre: </b>@book.GenreName <br />
                            <b>Author: </b>@book.AuthorName <br />
                            <b>Price: </b>@book.Price
                        </p>
                        <div class="mt-auto">
                            @if (book.Quantity > 0)
                            {
                                <button type="button" onclick="add(@book.Id)" class="btn btn-primary">Add to cart</button>
                            }
                            else
                            {
                                <span style="border: 1px solid; padding: 5px 8px; color: red; border-radius: 5px;">Out of stock</span>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="row">
        <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-center">
                @if (Model.CurrentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { sterm = Model.STerm, genreId = Model.GenreId, pageNumber = Model.CurrentPage - 1, pageSize = 9 })">
                            Previous
                        </a>
                    </li>
                }
                @for (var i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { sterm = Model.STerm, genreId = Model.GenreId, pageNumber = i, pageSize = 9 })">@i</a>
                    </li>
                }
                @if (Model.CurrentPage < Model.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { sterm = Model.STerm, genreId = Model.GenreId, pageNumber = Model.CurrentPage + 1, pageSize = 9})">></a>
                    </li>
                }
            </ul>
        </nav>
    </div>
</div>





@section Scripts {
    <script>
        async function add(bookId) {

            try {
                var response = await fetch(`/Cart/AddItem?bookId=${bookId}`);
                if (response.status == 200) {
                    var result = await response.json();
                    var cartCountEl = document.getElementById("cartCount");
                    cartCountEl.innerHTML = result;
                    window.location.href = "#cartCount";
                }
            }
            catch (err) {
                console.log(err);
            }
        }
        document.getElementById('genreDropdown').addEventListener('change', function () {
            var selectedGenreId = this.value;
            window.location.href = '@Url.Action("Index", "Home")?genreId=' + selectedGenreId + '&sterm=@Model.STerm';
        });
    </script>
}